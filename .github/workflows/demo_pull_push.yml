name: "Deploy images of SciCat backend and MongoDB to AWS in ECR"
run-name: (${{ github.event.inputs.environment }}) Deploy SciCat Backend to AWS by @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "The environment to deploy to"
        required: true
        default: 'integration'
        type: choice
        options:
          - integration
          - staging
          - production
env:
  AWS_REGION: ${{ vars.AWS_REGION || 'eu-west-1' }}
  MONGODB_IMAGE: mongo:${{ vars.MONGODB_IMAGE_TAG || '6.0.21' }}

permissions:
  contents: read
  id-token: write

jobs:
  scicat-image-to-ecr:
    name: Deploys SciCat Docker Image to ECR
    uses: ./.github/workflows/scicat-image-to-ecr.yml
    concurrency:
      group: environment-${{ github.ref_name }}
      cancel-in-progress: false
    with:
      environment: ${{ github.event.inputs.environment }}
      aws_region: ${{ vars.AWS_REGION || 'eu-west-1' }}
      scicat_image: ghcr.io/scicatproject/backend-next:${{ vars.SCICAT_IMAGE_TAG || 'latest' }}
      role_arn_image_push: ${{ vars.ROLE_ARN_IMAGE_PUSH }}


  deploy-mongodb:
    name: Deploy MongoDB Container
    concurrency:
      group: environment-${{ github.ref_name }}
      cancel-in-progress: false
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.environment }}
    steps:
      - id: credentials-mongodb-deploy
        name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ vars.ROLE_ARN_IMAGE_PUSH }}
          role-session-name: ${{ github.actor_id }}-${{ github.run_id }}-mongodb
          mask-aws-account-id: false

      - id: login-ecr-mongodb
        name: Login to AWS ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Pull and Push MongoDB Image
        id: push-mongodb-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr-mongodb.outputs.registry }}
          # Deploy in its own repository
          ECR_REPOSITORY: scicat-mongodb
        run: |
          # Pull official MongoDB image
          docker pull ${{ env.MONGODB_IMAGE }}

          # Tag with environment and SHA
          IMAGE_TAG=${{ github.sha }}
          FULL_IMAGE_URL=${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}

          # Check if repository exists
          aws ecr describe-repositories --repository-names "${ECR_REPOSITORY}" 2>/dev/null || \
          (echo "[ERROR] Repository doesn't exist, exiting now!" && exit 1)

          # Tag and push
          docker tag ${{ env.MONGODB_IMAGE }} ${FULL_IMAGE_URL}
          docker push ${FULL_IMAGE_URL}
          echo "Pushed MongoDB image: ${FULL_IMAGE_URL}"
          echo "mongodb_image_url=${FULL_IMAGE_URL}" >> $GITHUB_OUTPUT
    outputs:
      mongodb_image_url: ${{ steps.push-mongodb-image.outputs.mongodb_image_url }}
