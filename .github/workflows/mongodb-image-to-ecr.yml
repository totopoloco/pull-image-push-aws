name: Deploy MongoDB Image to ECR

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: "The environment to deploy to"
      aws_region:
        required: true
        type: string
        description: "AWS Region to use"
      mongodb_image:
        required: true
        type: string
        description: "MongoDB image to use"
      role_arn_image_push:
        required: true
        type: string
        description: "Role ARN for image push"
    outputs:
      mongodb_image_url:
        description: "The URL of the pushed MongoDB image"
        value: ${{ jobs.deploy-mongodb.outputs.mongodb_image_url }}

jobs:
  deploy-mongodb:
    name: Deploy MongoDB Container to ECR
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}
    outputs:
      mongodb_image_url: ${{ steps.push-mongodb-image.outputs.mongodb_image_url }}

    steps:
      - name: Display parameters information
        run: |
            echo "AWS Region: ${{ inputs.aws_region }}"
            echo "Environment: ${{ inputs.environment }}"
            echo "MongoDB Image: ${{ inputs.mongodb_image }}"
            echo "Role ARN for image push: ${{ inputs.role_arn_image_push }}"

      - id: credentials-mongodb-deploy
        name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ inputs.aws_region }}
          role-to-assume: ${{ inputs.role_arn_image_push }}
          role-session-name: ${{ github.actor_id }}-${{ github.run_id }}-mongodb
          mask-aws-account-id: false

      - id: login-ecr-mongodb
        name: Login to AWS ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Pull and Push MongoDB Image
        id: push-mongodb-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr-mongodb.outputs.registry }}
          ECR_REPOSITORY: scicat-mongodb
        run: |
          # Pull official MongoDB image
          docker pull ${{ inputs.mongodb_image }}

          # Tag with environment and SHA
          IMAGE_TAG=${{ github.sha }}
          FULL_IMAGE_URL=${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}

          # Check if repository exists
          aws ecr describe-repositories --repository-names "${ECR_REPOSITORY}" 2>/dev/null || \
          (echo "[ERROR] Repository doesn't exist, exiting now!" && exit 1)

          # Tag and push
          docker tag ${{ inputs.mongodb_image }} ${FULL_IMAGE_URL}
          docker push ${FULL_IMAGE_URL}
          echo "Pushed MongoDB image: ${FULL_IMAGE_URL}"
          echo "mongodb_image_url=${FULL_IMAGE_URL}" >> $GITHUB_OUTPUT